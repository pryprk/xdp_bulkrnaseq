x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Apoe"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Apoj"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Clu"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Elovl1"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Plin2"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Plin4"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Bcl2l1"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Galc"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Ppp1r1b"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Serpina3n"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Serpina3"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Serpina3n"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Cnp"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Mobp"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Klk6"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Ctsb"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Serpina3n"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Bax"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Gadd45a"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
# Define the gene of interest
selected_gene <- "Ebp"  # Replace with your gene of interest
# Filter the reshaped data for the selected gene
gene_counts <- reshaped_counts %>% filter(Gene == selected_gene)
# Set the factor levels for Group to ensure correct order
gene_counts$Group <- factor(gene_counts$Group, levels = names(groupings))
# Define custom colors for the groups
custom_colors <- c("#000000", "#000000", "#BEA0C3", "#BEA0C3", "#78BBE6", "#78BBE6")
# Plot with custom colors and additional customizations
ggplot(gene_counts, aes(x = Group, y = RawCount, color = Group)) +
geom_point(size = 9, stroke = 1.5) +  # Increased dot size
theme_minimal() +
labs(title = paste("Normalized Counts of", selected_gene),
x = "Sample Group",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
legend.position = "none",  # Remove legend
axis.title.x = element_text(size = 30, color = "black"),  # Increase x-axis font size
axis.title.y = element_text(size = 30, color = "black"),  # Increase y-axis font size
axis.text = element_text(size = 30, color = "black"),     # Increase axis text font size
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_rect(color = "black", fill = NA, size = 1.5),
aspect.ratio = 1) +  # Set aspect ratio to 1:1
scale_color_manual(values = custom_colors)  # Apply custom colors
